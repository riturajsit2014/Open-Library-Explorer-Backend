{
  "name": "open-library-explorer-backend",
  "version": "1.0.0",
  "description": "Open Library Explorer Backend",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "copy:proto": "node scripts/copy-proto.js",
    "start:rest": "ts-node src/main.ts",
    "start:grpc": "ts-node src/grpc/main.ts",
    "start:all": "npm run generate:proto && concurrently \"npm run start:rest\" \"npm run start:grpc\"",
    "start:all:prod": "rimraf dist && npm run generate:proto && concurrently \"npm run build:rest && node dist-rest/main\" \"npm run build:grpc && node dist-grpc/grpc/main\"",
    "build:grpc": "nest build --config nest-grpc.json",
    "build:rest": "nest build --config nest-rest.json",
    "build:all": "npm run build:rest && npm run build:grpc",
    "generate:proto": "rimraf src/proto/*_pb.js src/proto/src && mkdir -p dist/proto && grpc_tools_node_protoc -I=src/proto --js_out=import_style=commonjs,binary:src/proto --grpc_out=grpc_js:src/proto src/proto/*.proto && cp src/proto/*.proto dist/proto/",
    "typeorm": "typeorm-ts-node-commonjs -d ./ormconfig.ts",
    "migration:generate": "npm run typeorm -- migration:generate --pretty ./src/data/migrations/${npm_config_name}",
    "migration:run": "npm run typeorm -- migration:run",
    "migration:revert": "npm run typeorm -- migration:revert",
    "migration:create": "npm run typeorm -- migration:create --pretty"
  },
  "dependencies": {
    "@grpc/grpc-js": "^1.13.3",
    "@grpc/proto-loader": "^0.7.15",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/passport": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.0.0",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/typeorm": "^10.0.0",
    "@nestjs/websockets": "^10.0.0",
    "@types/multer": "^1.4.12",
    "@types/socket.io": "^3.0.1",
    "amqplib": "^0.10.3",
    "bcrypt": "^5.1.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "csv-parse": "^5.6.0",
    "date-fns": "^4.1.0",
    "marcjs": "^3.0.2",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.11.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "socket.io": "^4.8.1",
    "typeorm": "^0.3.16",
    "winston": "^3.10.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/fs-extra": "^11.0.4",
    "@types/google-protobuf": "^3.15.12",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/passport-jwt": "^3.0.8",
    "@types/passport-local": "^1.0.35",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^9.1.2",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "fs-extra": "^11.3.0",
    "grpc-tools": "^1.13.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "ts-proto": "^2.7.0",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
